[{"/home/rgukt/Desktop/clonned/Faceshape-detection-using-MediaPipe-React-Js/src/index.js":"1","/home/rgukt/Desktop/clonned/Faceshape-detection-using-MediaPipe-React-Js/src/reportWebVitals.js":"2","/home/rgukt/Desktop/clonned/Faceshape-detection-using-MediaPipe-React-Js/src/App.js":"3"},{"size":535,"mtime":1720506490056,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":1720506490056,"results":"6","hashOfConfig":"5"},{"size":6614,"mtime":1720506490052,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"c7qitt",{"filePath":"11","messages":"12","suppressedMessages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/rgukt/Desktop/clonned/Faceshape-detection-using-MediaPipe-React-Js/src/index.js",[],[],"/home/rgukt/Desktop/clonned/Faceshape-detection-using-MediaPipe-React-Js/src/reportWebVitals.js",[],[],"/home/rgukt/Desktop/clonned/Faceshape-detection-using-MediaPipe-React-Js/src/App.js",["17","18"],[],{"ruleId":"19","severity":1,"message":"20","line":1,"column":8,"nodeType":"21","messageId":"22","endLine":1,"endColumn":12},{"ruleId":"23","severity":1,"message":"24","line":148,"column":20,"nodeType":"25","endLine":154,"endColumn":13},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Assignments to the 'camera' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","NewExpression"]